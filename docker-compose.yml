# Development configuration
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"  # Flask server port
      - "3000:3000"  # Frontend dev server port
    volumes:
      # Development volumes for hot reloading
      - ./audio-processing:/app/audio-processing
      - ./discord-bot:/app/discord-bot
      - ./frontend:/app/frontend:cached
      # Persist data
      - ./audio-processing/data:/app/audio-processing/data
      # Don't override the static files from the frontend build
      - /app/audio-processing/static
    environment:
      - NODE_ENV=development
      - PYTHONUNBUFFERED=1  # Better Python logging
      - DISCORD_TOKEN=${DISCORD_TOKEN}  # Pass through from host environment
      - CHOKIDAR_USEPOLLING=true  # Enable file watching
      - WATCHPACK_POLLING=true    # Enable webpack polling
      - WDS_SOCKET_PORT=3000      # WebSocket port for hot reload
      - REACT_APP_API_URL=http://localhost:5000  # API URL for frontend
      - FLASK_ENV=development     # Enable Flask development mode
      - FLASK_APP=app.py          # Specify Flask application file
    env_file:
      - .env  # Alternative: load from .env file
    stdin_open: true  # Required for react-scripts start
    tty: true        # Required for react-scripts start
    restart: unless-stopped 